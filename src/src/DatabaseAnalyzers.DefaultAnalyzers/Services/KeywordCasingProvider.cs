using System.Diagnostics.CodeAnalysis;
using DatabaseAnalyzers.DefaultAnalyzers.Analyzers.Settings;
using Microsoft.SqlServer.TransactSql.ScriptDom;

namespace DatabaseAnalyzers.DefaultAnalyzers.Services;

internal static class KeywordCasingProvider
{
    [SuppressMessage("Minor Code Smell", "S1192:String literals should not be duplicated")]
    private static readonly Dictionary<(TSqlTokenType, KeywordNamingPolicy), string?> KeywordCasingsByTokenType = new()
    {
        { (TSqlTokenType.Add, KeywordNamingPolicy.LowerCase), "add" },
        { (TSqlTokenType.Add, KeywordNamingPolicy.CamelCase), "add" },
        { (TSqlTokenType.Add, KeywordNamingPolicy.PascalCase), "Add" },
        { (TSqlTokenType.Add, KeywordNamingPolicy.UpperCase), "ADD" },
        { (TSqlTokenType.AddEquals, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.AddEquals, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.AddEquals, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.AddEquals, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.All, KeywordNamingPolicy.LowerCase), "all" },
        { (TSqlTokenType.All, KeywordNamingPolicy.CamelCase), "all" },
        { (TSqlTokenType.All, KeywordNamingPolicy.PascalCase), "All" },
        { (TSqlTokenType.All, KeywordNamingPolicy.UpperCase), "ALL" },
        { (TSqlTokenType.Alter, KeywordNamingPolicy.LowerCase), "alter" },
        { (TSqlTokenType.Alter, KeywordNamingPolicy.CamelCase), "alter" },
        { (TSqlTokenType.Alter, KeywordNamingPolicy.PascalCase), "Alter" },
        { (TSqlTokenType.Alter, KeywordNamingPolicy.UpperCase), "ALTER" },
        { (TSqlTokenType.Ampersand, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Ampersand, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Ampersand, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Ampersand, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.And, KeywordNamingPolicy.LowerCase), "and" },
        { (TSqlTokenType.And, KeywordNamingPolicy.CamelCase), "and" },
        { (TSqlTokenType.And, KeywordNamingPolicy.PascalCase), "And" },
        { (TSqlTokenType.And, KeywordNamingPolicy.UpperCase), "AND" },
        { (TSqlTokenType.Any, KeywordNamingPolicy.LowerCase), "any" },
        { (TSqlTokenType.Any, KeywordNamingPolicy.CamelCase), "any" },
        { (TSqlTokenType.Any, KeywordNamingPolicy.PascalCase), "Any" },
        { (TSqlTokenType.Any, KeywordNamingPolicy.UpperCase), "ANY" },
        { (TSqlTokenType.As, KeywordNamingPolicy.LowerCase), "as" },
        { (TSqlTokenType.As, KeywordNamingPolicy.CamelCase), "as" },
        { (TSqlTokenType.As, KeywordNamingPolicy.PascalCase), "As" },
        { (TSqlTokenType.As, KeywordNamingPolicy.UpperCase), "AS" },
        { (TSqlTokenType.Asc, KeywordNamingPolicy.LowerCase), "asc" },
        { (TSqlTokenType.Asc, KeywordNamingPolicy.CamelCase), "asc" },
        { (TSqlTokenType.Asc, KeywordNamingPolicy.PascalCase), "Asc" },
        { (TSqlTokenType.Asc, KeywordNamingPolicy.UpperCase), "ASC" },
        { (TSqlTokenType.AsciiStringLiteral, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.AsciiStringLiteral, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.AsciiStringLiteral, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.AsciiStringLiteral, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.AsciiStringOrQuotedIdentifier, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.AsciiStringOrQuotedIdentifier, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.AsciiStringOrQuotedIdentifier, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.AsciiStringOrQuotedIdentifier, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Authorization, KeywordNamingPolicy.LowerCase), "authorization" },
        { (TSqlTokenType.Authorization, KeywordNamingPolicy.CamelCase), "authorization" },
        { (TSqlTokenType.Authorization, KeywordNamingPolicy.PascalCase), "Authorization" },
        { (TSqlTokenType.Authorization, KeywordNamingPolicy.UpperCase), "AUTHORIZATION" },
        { (TSqlTokenType.Backup, KeywordNamingPolicy.LowerCase), "backup" },
        { (TSqlTokenType.Backup, KeywordNamingPolicy.CamelCase), "backup" },
        { (TSqlTokenType.Backup, KeywordNamingPolicy.PascalCase), "Backup" },
        { (TSqlTokenType.Backup, KeywordNamingPolicy.UpperCase), "BACKUP" },
        { (TSqlTokenType.Bang, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Bang, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Bang, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Bang, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Begin, KeywordNamingPolicy.LowerCase), "begin" },
        { (TSqlTokenType.Begin, KeywordNamingPolicy.CamelCase), "begin" },
        { (TSqlTokenType.Begin, KeywordNamingPolicy.PascalCase), "Begin" },
        { (TSqlTokenType.Begin, KeywordNamingPolicy.UpperCase), "BEGIN" },
        { (TSqlTokenType.Between, KeywordNamingPolicy.LowerCase), "between" },
        { (TSqlTokenType.Between, KeywordNamingPolicy.CamelCase), "between" },
        { (TSqlTokenType.Between, KeywordNamingPolicy.PascalCase), "Between" },
        { (TSqlTokenType.Between, KeywordNamingPolicy.UpperCase), "BETWEEN" },
        { (TSqlTokenType.BitwiseAndEquals, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.BitwiseAndEquals, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.BitwiseAndEquals, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.BitwiseAndEquals, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.BitwiseOrEquals, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.BitwiseOrEquals, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.BitwiseOrEquals, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.BitwiseOrEquals, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.BitwiseXorEquals, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.BitwiseXorEquals, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.BitwiseXorEquals, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.BitwiseXorEquals, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Break, KeywordNamingPolicy.LowerCase), "break" },
        { (TSqlTokenType.Break, KeywordNamingPolicy.CamelCase), "break" },
        { (TSqlTokenType.Break, KeywordNamingPolicy.PascalCase), "Break" },
        { (TSqlTokenType.Break, KeywordNamingPolicy.UpperCase), "BREAK" },
        { (TSqlTokenType.Browse, KeywordNamingPolicy.LowerCase), "browse" },
        { (TSqlTokenType.Browse, KeywordNamingPolicy.CamelCase), "browse" },
        { (TSqlTokenType.Browse, KeywordNamingPolicy.PascalCase), "Browse" },
        { (TSqlTokenType.Browse, KeywordNamingPolicy.UpperCase), "BROWSE" },
        { (TSqlTokenType.Bulk, KeywordNamingPolicy.LowerCase), "bulk" },
        { (TSqlTokenType.Bulk, KeywordNamingPolicy.CamelCase), "bulk" },
        { (TSqlTokenType.Bulk, KeywordNamingPolicy.PascalCase), "Bulk" },
        { (TSqlTokenType.Bulk, KeywordNamingPolicy.UpperCase), "BULK" },
        { (TSqlTokenType.By, KeywordNamingPolicy.LowerCase), "by" },
        { (TSqlTokenType.By, KeywordNamingPolicy.CamelCase), "by" },
        { (TSqlTokenType.By, KeywordNamingPolicy.PascalCase), "By" },
        { (TSqlTokenType.By, KeywordNamingPolicy.UpperCase), "BY" },
        { (TSqlTokenType.Cascade, KeywordNamingPolicy.LowerCase), "cascade" },
        { (TSqlTokenType.Cascade, KeywordNamingPolicy.CamelCase), "cascade" },
        { (TSqlTokenType.Cascade, KeywordNamingPolicy.PascalCase), "Cascade" },
        { (TSqlTokenType.Cascade, KeywordNamingPolicy.UpperCase), "CASCADE" },
        { (TSqlTokenType.Case, KeywordNamingPolicy.LowerCase), "case" },
        { (TSqlTokenType.Case, KeywordNamingPolicy.CamelCase), "case" },
        { (TSqlTokenType.Case, KeywordNamingPolicy.PascalCase), "Case" },
        { (TSqlTokenType.Case, KeywordNamingPolicy.UpperCase), "CASE" },
        { (TSqlTokenType.Check, KeywordNamingPolicy.LowerCase), "check" },
        { (TSqlTokenType.Check, KeywordNamingPolicy.CamelCase), "check" },
        { (TSqlTokenType.Check, KeywordNamingPolicy.PascalCase), "Check" },
        { (TSqlTokenType.Check, KeywordNamingPolicy.UpperCase), "CHECK" },
        { (TSqlTokenType.Checkpoint, KeywordNamingPolicy.LowerCase), "checkpoint" },
        { (TSqlTokenType.Checkpoint, KeywordNamingPolicy.CamelCase), "checkPoint" },
        { (TSqlTokenType.Checkpoint, KeywordNamingPolicy.PascalCase), "CheckPoint" },
        { (TSqlTokenType.Checkpoint, KeywordNamingPolicy.UpperCase), "CHECKPOINT" },
        { (TSqlTokenType.Circumflex, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Circumflex, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Circumflex, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Circumflex, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Close, KeywordNamingPolicy.LowerCase), "close" },
        { (TSqlTokenType.Close, KeywordNamingPolicy.CamelCase), "close" },
        { (TSqlTokenType.Close, KeywordNamingPolicy.PascalCase), "Close" },
        { (TSqlTokenType.Close, KeywordNamingPolicy.UpperCase), "CLOSE" },
        { (TSqlTokenType.Clustered, KeywordNamingPolicy.LowerCase), "clustered" },
        { (TSqlTokenType.Clustered, KeywordNamingPolicy.CamelCase), "clustered" },
        { (TSqlTokenType.Clustered, KeywordNamingPolicy.PascalCase), "Clustered" },
        { (TSqlTokenType.Clustered, KeywordNamingPolicy.UpperCase), "CLUSTERED" },
        { (TSqlTokenType.Coalesce, KeywordNamingPolicy.LowerCase), "coalesce" },
        { (TSqlTokenType.Coalesce, KeywordNamingPolicy.CamelCase), "coalesce" },
        { (TSqlTokenType.Coalesce, KeywordNamingPolicy.PascalCase), "Coalesce" },
        { (TSqlTokenType.Coalesce, KeywordNamingPolicy.UpperCase), "COALESCE" },
        { (TSqlTokenType.Collate, KeywordNamingPolicy.LowerCase), "collate" },
        { (TSqlTokenType.Collate, KeywordNamingPolicy.CamelCase), "collate" },
        { (TSqlTokenType.Collate, KeywordNamingPolicy.PascalCase), "Collate" },
        { (TSqlTokenType.Collate, KeywordNamingPolicy.UpperCase), "COLLATE" },
        { (TSqlTokenType.Colon, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Colon, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Colon, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Colon, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Column, KeywordNamingPolicy.LowerCase), "column" },
        { (TSqlTokenType.Column, KeywordNamingPolicy.CamelCase), "column" },
        { (TSqlTokenType.Column, KeywordNamingPolicy.PascalCase), "Column" },
        { (TSqlTokenType.Column, KeywordNamingPolicy.UpperCase), "COLUMN" },
        { (TSqlTokenType.Comma, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Comma, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Comma, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Comma, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Commit, KeywordNamingPolicy.LowerCase), "commit" },
        { (TSqlTokenType.Commit, KeywordNamingPolicy.CamelCase), "commit" },
        { (TSqlTokenType.Commit, KeywordNamingPolicy.PascalCase), "Commit" },
        { (TSqlTokenType.Commit, KeywordNamingPolicy.UpperCase), "COMMIT" },
        { (TSqlTokenType.Compute, KeywordNamingPolicy.LowerCase), "compute" },
        { (TSqlTokenType.Compute, KeywordNamingPolicy.CamelCase), "compute" },
        { (TSqlTokenType.Compute, KeywordNamingPolicy.PascalCase), "Compute" },
        { (TSqlTokenType.Compute, KeywordNamingPolicy.UpperCase), "COMPUTE" },
        { (TSqlTokenType.Concat, KeywordNamingPolicy.LowerCase), "concat" },
        { (TSqlTokenType.Concat, KeywordNamingPolicy.CamelCase), "concat" },
        { (TSqlTokenType.Concat, KeywordNamingPolicy.PascalCase), "Concat" },
        { (TSqlTokenType.Concat, KeywordNamingPolicy.UpperCase), "CONCAT" },
        { (TSqlTokenType.ConcatEquals, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.ConcatEquals, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.ConcatEquals, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.ConcatEquals, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Constraint, KeywordNamingPolicy.LowerCase), "constraint" },
        { (TSqlTokenType.Constraint, KeywordNamingPolicy.CamelCase), "constraint" },
        { (TSqlTokenType.Constraint, KeywordNamingPolicy.PascalCase), "Constraint" },
        { (TSqlTokenType.Constraint, KeywordNamingPolicy.UpperCase), "CONSTRAINT" },
        { (TSqlTokenType.Contains, KeywordNamingPolicy.LowerCase), "contains" },
        { (TSqlTokenType.Contains, KeywordNamingPolicy.CamelCase), "contains" },
        { (TSqlTokenType.Contains, KeywordNamingPolicy.PascalCase), "Contains" },
        { (TSqlTokenType.Contains, KeywordNamingPolicy.UpperCase), "CONTAINS" },
        { (TSqlTokenType.ContainsTable, KeywordNamingPolicy.LowerCase), "containstable" },
        { (TSqlTokenType.ContainsTable, KeywordNamingPolicy.CamelCase), "containsTable" },
        { (TSqlTokenType.ContainsTable, KeywordNamingPolicy.PascalCase), "ContainsTable" },
        { (TSqlTokenType.ContainsTable, KeywordNamingPolicy.UpperCase), "CONTAINSTABLE" },
        { (TSqlTokenType.Continue, KeywordNamingPolicy.LowerCase), "continue" },
        { (TSqlTokenType.Continue, KeywordNamingPolicy.CamelCase), "continue" },
        { (TSqlTokenType.Continue, KeywordNamingPolicy.PascalCase), "Continue" },
        { (TSqlTokenType.Continue, KeywordNamingPolicy.UpperCase), "CONTINUE" },
        { (TSqlTokenType.Convert, KeywordNamingPolicy.LowerCase), "convert" },
        { (TSqlTokenType.Convert, KeywordNamingPolicy.CamelCase), "convert" },
        { (TSqlTokenType.Convert, KeywordNamingPolicy.PascalCase), "Convert" },
        { (TSqlTokenType.Convert, KeywordNamingPolicy.UpperCase), "CONVERT" },
        { (TSqlTokenType.Create, KeywordNamingPolicy.LowerCase), "create" },
        { (TSqlTokenType.Create, KeywordNamingPolicy.CamelCase), "create" },
        { (TSqlTokenType.Create, KeywordNamingPolicy.PascalCase), "Create" },
        { (TSqlTokenType.Create, KeywordNamingPolicy.UpperCase), "CREATE" },
        { (TSqlTokenType.Cross, KeywordNamingPolicy.LowerCase), "cross" },
        { (TSqlTokenType.Cross, KeywordNamingPolicy.CamelCase), "cross" },
        { (TSqlTokenType.Cross, KeywordNamingPolicy.PascalCase), "Cross" },
        { (TSqlTokenType.Cross, KeywordNamingPolicy.UpperCase), "CROSS" },
        { (TSqlTokenType.Current, KeywordNamingPolicy.LowerCase), "current" }, // TODO: is there a such keyword?
        { (TSqlTokenType.Current, KeywordNamingPolicy.CamelCase), "current" }, // TODO: is there a such keyword?
        { (TSqlTokenType.Current, KeywordNamingPolicy.PascalCase), "Current" }, // TODO: is there a such keyword?
        { (TSqlTokenType.Current, KeywordNamingPolicy.UpperCase), "CURRENT" }, // TODO: is there a such keyword?
        { (TSqlTokenType.CurrentDate, KeywordNamingPolicy.LowerCase), "current_date" },
        { (TSqlTokenType.CurrentDate, KeywordNamingPolicy.CamelCase), "current_Date" },
        { (TSqlTokenType.CurrentDate, KeywordNamingPolicy.PascalCase), "Current_Date" },
        { (TSqlTokenType.CurrentDate, KeywordNamingPolicy.UpperCase), "CURRENT_DATE" },
        { (TSqlTokenType.CurrentTime, KeywordNamingPolicy.LowerCase), "current_time" },
        { (TSqlTokenType.CurrentTime, KeywordNamingPolicy.CamelCase), "current_Time" },
        { (TSqlTokenType.CurrentTime, KeywordNamingPolicy.PascalCase), "Current_Time" },
        { (TSqlTokenType.CurrentTime, KeywordNamingPolicy.UpperCase), "CURRENT_TIME" },
        { (TSqlTokenType.CurrentTimestamp, KeywordNamingPolicy.LowerCase), "current_timestamp" },
        { (TSqlTokenType.CurrentTimestamp, KeywordNamingPolicy.CamelCase), "current_Timestamp" },
        { (TSqlTokenType.CurrentTimestamp, KeywordNamingPolicy.PascalCase), "Current_Timestamp" },
        { (TSqlTokenType.CurrentTimestamp, KeywordNamingPolicy.UpperCase), "CURRENT_TIMESTAMP" },
        { (TSqlTokenType.CurrentUser, KeywordNamingPolicy.LowerCase), "current_user" },
        { (TSqlTokenType.CurrentUser, KeywordNamingPolicy.CamelCase), "current_User" },
        { (TSqlTokenType.CurrentUser, KeywordNamingPolicy.PascalCase), "Current_User" },
        { (TSqlTokenType.CurrentUser, KeywordNamingPolicy.UpperCase), "CURRENT_USER" },
        { (TSqlTokenType.Cursor, KeywordNamingPolicy.LowerCase), "cursor" },
        { (TSqlTokenType.Cursor, KeywordNamingPolicy.CamelCase), "cursor" },
        { (TSqlTokenType.Cursor, KeywordNamingPolicy.PascalCase), "Cursor" },
        { (TSqlTokenType.Cursor, KeywordNamingPolicy.UpperCase), "CURSOR" },
        { (TSqlTokenType.Database, KeywordNamingPolicy.LowerCase), "database" },
        { (TSqlTokenType.Database, KeywordNamingPolicy.CamelCase), "database" },
        { (TSqlTokenType.Database, KeywordNamingPolicy.PascalCase), "Database" },
        { (TSqlTokenType.Database, KeywordNamingPolicy.UpperCase), "DATABASE" },
        { (TSqlTokenType.Dbcc, KeywordNamingPolicy.LowerCase), "dbcc" },
        { (TSqlTokenType.Dbcc, KeywordNamingPolicy.CamelCase), "dbcc" },
        { (TSqlTokenType.Dbcc, KeywordNamingPolicy.PascalCase), "Dbcc" },
        { (TSqlTokenType.Dbcc, KeywordNamingPolicy.UpperCase), "DBCC" },
        { (TSqlTokenType.Deallocate, KeywordNamingPolicy.LowerCase), "deallocate" },
        { (TSqlTokenType.Deallocate, KeywordNamingPolicy.CamelCase), "deallocate" },
        { (TSqlTokenType.Deallocate, KeywordNamingPolicy.PascalCase), "Deallocate" },
        { (TSqlTokenType.Deallocate, KeywordNamingPolicy.UpperCase), "DEALLOCATE" },
        { (TSqlTokenType.Declare, KeywordNamingPolicy.LowerCase), "declare" },
        { (TSqlTokenType.Declare, KeywordNamingPolicy.CamelCase), "declare" },
        { (TSqlTokenType.Declare, KeywordNamingPolicy.PascalCase), "Declare" },
        { (TSqlTokenType.Declare, KeywordNamingPolicy.UpperCase), "DECLARE" },
        { (TSqlTokenType.Default, KeywordNamingPolicy.LowerCase), "default" },
        { (TSqlTokenType.Default, KeywordNamingPolicy.CamelCase), "default" },
        { (TSqlTokenType.Default, KeywordNamingPolicy.PascalCase), "Default" },
        { (TSqlTokenType.Default, KeywordNamingPolicy.UpperCase), "DEFAULT" },
        { (TSqlTokenType.Delete, KeywordNamingPolicy.LowerCase), "delete" },
        { (TSqlTokenType.Delete, KeywordNamingPolicy.CamelCase), "delete" },
        { (TSqlTokenType.Delete, KeywordNamingPolicy.PascalCase), "Delete" },
        { (TSqlTokenType.Delete, KeywordNamingPolicy.UpperCase), "DELETE" },
        { (TSqlTokenType.Deny, KeywordNamingPolicy.LowerCase), "deny" },
        { (TSqlTokenType.Deny, KeywordNamingPolicy.CamelCase), "deny" },
        { (TSqlTokenType.Deny, KeywordNamingPolicy.PascalCase), "Deny" },
        { (TSqlTokenType.Deny, KeywordNamingPolicy.UpperCase), "DENY" },
        { (TSqlTokenType.Desc, KeywordNamingPolicy.LowerCase), "desc" },
        { (TSqlTokenType.Desc, KeywordNamingPolicy.CamelCase), "desc" },
        { (TSqlTokenType.Desc, KeywordNamingPolicy.PascalCase), "Desc" },
        { (TSqlTokenType.Desc, KeywordNamingPolicy.UpperCase), "DESC" },
        { (TSqlTokenType.Disk, KeywordNamingPolicy.LowerCase), "disk" },
        { (TSqlTokenType.Disk, KeywordNamingPolicy.CamelCase), "disk" },
        { (TSqlTokenType.Disk, KeywordNamingPolicy.PascalCase), "Disk" },
        { (TSqlTokenType.Disk, KeywordNamingPolicy.UpperCase), "DISK" },
        { (TSqlTokenType.Distinct, KeywordNamingPolicy.LowerCase), "distinct" },
        { (TSqlTokenType.Distinct, KeywordNamingPolicy.CamelCase), "distinct" },
        { (TSqlTokenType.Distinct, KeywordNamingPolicy.PascalCase), "Distinct" },
        { (TSqlTokenType.Distinct, KeywordNamingPolicy.UpperCase), "DISTINCT" },
        { (TSqlTokenType.Distributed, KeywordNamingPolicy.LowerCase), "distributed" },
        { (TSqlTokenType.Distributed, KeywordNamingPolicy.CamelCase), "distributed" },
        { (TSqlTokenType.Distributed, KeywordNamingPolicy.PascalCase), "Distributed" },
        { (TSqlTokenType.Distributed, KeywordNamingPolicy.UpperCase), "DISTRIBUTED" },
        { (TSqlTokenType.Divide, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Divide, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Divide, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Divide, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.DivideEquals, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.DivideEquals, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.DivideEquals, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.DivideEquals, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.DollarPartition, KeywordNamingPolicy.LowerCase), "$partition" },
        { (TSqlTokenType.DollarPartition, KeywordNamingPolicy.CamelCase), "$Partition" },
        { (TSqlTokenType.DollarPartition, KeywordNamingPolicy.PascalCase), "$dollarPartition" },
        { (TSqlTokenType.DollarPartition, KeywordNamingPolicy.UpperCase), "$DOLLARPARTITION" },
        { (TSqlTokenType.Dot, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Dot, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Dot, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Dot, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Double, KeywordNamingPolicy.LowerCase), "double" },
        { (TSqlTokenType.Double, KeywordNamingPolicy.CamelCase), "double" },
        { (TSqlTokenType.Double, KeywordNamingPolicy.PascalCase), "Double" },
        { (TSqlTokenType.Double, KeywordNamingPolicy.UpperCase), "DOUBLE" },
        { (TSqlTokenType.DoubleColon, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.DoubleColon, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.DoubleColon, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.DoubleColon, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Drop, KeywordNamingPolicy.LowerCase), "drop" },
        { (TSqlTokenType.Drop, KeywordNamingPolicy.CamelCase), "drop" },
        { (TSqlTokenType.Drop, KeywordNamingPolicy.PascalCase), "Drop" },
        { (TSqlTokenType.Drop, KeywordNamingPolicy.UpperCase), "DROP" },
        { (TSqlTokenType.Dump, KeywordNamingPolicy.LowerCase), "dump" },
        { (TSqlTokenType.Dump, KeywordNamingPolicy.CamelCase), "dump" },
        { (TSqlTokenType.Dump, KeywordNamingPolicy.PascalCase), "Dump" },
        { (TSqlTokenType.Dump, KeywordNamingPolicy.UpperCase), "DUMP" },
        { (TSqlTokenType.Else, KeywordNamingPolicy.LowerCase), "else" },
        { (TSqlTokenType.Else, KeywordNamingPolicy.CamelCase), "else" },
        { (TSqlTokenType.Else, KeywordNamingPolicy.PascalCase), "Else" },
        { (TSqlTokenType.Else, KeywordNamingPolicy.UpperCase), "ELSE" },
        { (TSqlTokenType.End, KeywordNamingPolicy.LowerCase), "end" },
        { (TSqlTokenType.End, KeywordNamingPolicy.CamelCase), "end" },
        { (TSqlTokenType.End, KeywordNamingPolicy.PascalCase), "End" },
        { (TSqlTokenType.End, KeywordNamingPolicy.UpperCase), "END" },
        { (TSqlTokenType.EndOfFile, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.EndOfFile, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.EndOfFile, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.EndOfFile, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.EqualsSign, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.EqualsSign, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.EqualsSign, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.EqualsSign, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Errlvl, KeywordNamingPolicy.LowerCase), "errlvl" },
        { (TSqlTokenType.Errlvl, KeywordNamingPolicy.CamelCase), "errlvl" },
        { (TSqlTokenType.Errlvl, KeywordNamingPolicy.PascalCase), "Errlvl" },
        { (TSqlTokenType.Errlvl, KeywordNamingPolicy.UpperCase), "ERRLVL" },
        { (TSqlTokenType.Escape, KeywordNamingPolicy.LowerCase), "escape" },
        { (TSqlTokenType.Escape, KeywordNamingPolicy.CamelCase), "escape" },
        { (TSqlTokenType.Escape, KeywordNamingPolicy.PascalCase), "Escape" },
        { (TSqlTokenType.Escape, KeywordNamingPolicy.UpperCase), "ESCAPE" },
        { (TSqlTokenType.Except, KeywordNamingPolicy.LowerCase), "except" },
        { (TSqlTokenType.Except, KeywordNamingPolicy.CamelCase), "except" },
        { (TSqlTokenType.Except, KeywordNamingPolicy.PascalCase), "Except" },
        { (TSqlTokenType.Except, KeywordNamingPolicy.UpperCase), "EXCEPT" },
        { (TSqlTokenType.Exec, KeywordNamingPolicy.LowerCase), "exec" },
        { (TSqlTokenType.Exec, KeywordNamingPolicy.CamelCase), "exec" },
        { (TSqlTokenType.Exec, KeywordNamingPolicy.PascalCase), "Exec" },
        { (TSqlTokenType.Exec, KeywordNamingPolicy.UpperCase), "EXEC" },
        { (TSqlTokenType.Execute, KeywordNamingPolicy.LowerCase), "execute" },
        { (TSqlTokenType.Execute, KeywordNamingPolicy.CamelCase), "execute" },
        { (TSqlTokenType.Execute, KeywordNamingPolicy.PascalCase), "Execute" },
        { (TSqlTokenType.Execute, KeywordNamingPolicy.UpperCase), "EXECUTE" },
        { (TSqlTokenType.Exists, KeywordNamingPolicy.LowerCase), "exists" },
        { (TSqlTokenType.Exists, KeywordNamingPolicy.CamelCase), "exists" },
        { (TSqlTokenType.Exists, KeywordNamingPolicy.PascalCase), "Exists" },
        { (TSqlTokenType.Exists, KeywordNamingPolicy.UpperCase), "EXISTS" },
        { (TSqlTokenType.Exit, KeywordNamingPolicy.LowerCase), "exit" },
        { (TSqlTokenType.Exit, KeywordNamingPolicy.CamelCase), "exit" },
        { (TSqlTokenType.Exit, KeywordNamingPolicy.PascalCase), "Exit" },
        { (TSqlTokenType.Exit, KeywordNamingPolicy.UpperCase), "EXIT" },
        { (TSqlTokenType.External, KeywordNamingPolicy.LowerCase), "external" },
        { (TSqlTokenType.External, KeywordNamingPolicy.CamelCase), "external" },
        { (TSqlTokenType.External, KeywordNamingPolicy.PascalCase), "External" },
        { (TSqlTokenType.External, KeywordNamingPolicy.UpperCase), "EXTERNAL" },
        { (TSqlTokenType.Fetch, KeywordNamingPolicy.LowerCase), "fetch" },
        { (TSqlTokenType.Fetch, KeywordNamingPolicy.CamelCase), "fetch" },
        { (TSqlTokenType.Fetch, KeywordNamingPolicy.PascalCase), "Fetch" },
        { (TSqlTokenType.Fetch, KeywordNamingPolicy.UpperCase), "FETCH" },
        { (TSqlTokenType.File, KeywordNamingPolicy.LowerCase), "file" },
        { (TSqlTokenType.File, KeywordNamingPolicy.CamelCase), "file" },
        { (TSqlTokenType.File, KeywordNamingPolicy.PascalCase), "File" },
        { (TSqlTokenType.File, KeywordNamingPolicy.UpperCase), "FILE" },
        { (TSqlTokenType.FillFactor, KeywordNamingPolicy.LowerCase), "fillfactor" },
        { (TSqlTokenType.FillFactor, KeywordNamingPolicy.CamelCase), "fillFactor" },
        { (TSqlTokenType.FillFactor, KeywordNamingPolicy.PascalCase), "FillFactor" },
        { (TSqlTokenType.FillFactor, KeywordNamingPolicy.UpperCase), "FILLFACTOR" },
        { (TSqlTokenType.For, KeywordNamingPolicy.LowerCase), "for" },
        { (TSqlTokenType.For, KeywordNamingPolicy.CamelCase), "for" },
        { (TSqlTokenType.For, KeywordNamingPolicy.PascalCase), "For" },
        { (TSqlTokenType.For, KeywordNamingPolicy.UpperCase), "FOR" },
        { (TSqlTokenType.Foreign, KeywordNamingPolicy.LowerCase), "foreign" },
        { (TSqlTokenType.Foreign, KeywordNamingPolicy.CamelCase), "foreign" },
        { (TSqlTokenType.Foreign, KeywordNamingPolicy.PascalCase), "Foreign" },
        { (TSqlTokenType.Foreign, KeywordNamingPolicy.UpperCase), "FOREIGN" },
        { (TSqlTokenType.FreeText, KeywordNamingPolicy.LowerCase), "freetext" },
        { (TSqlTokenType.FreeText, KeywordNamingPolicy.CamelCase), "freeText" },
        { (TSqlTokenType.FreeText, KeywordNamingPolicy.PascalCase), "FreeText" },
        { (TSqlTokenType.FreeText, KeywordNamingPolicy.UpperCase), "FREETEXT" },
        { (TSqlTokenType.FreeTextTable, KeywordNamingPolicy.LowerCase), "freetexttable" },
        { (TSqlTokenType.FreeTextTable, KeywordNamingPolicy.CamelCase), "freeTextTable" },
        { (TSqlTokenType.FreeTextTable, KeywordNamingPolicy.PascalCase), "FreeTextTable" },
        { (TSqlTokenType.FreeTextTable, KeywordNamingPolicy.UpperCase), "FREETEXTTABLE" },
        { (TSqlTokenType.From, KeywordNamingPolicy.LowerCase), "from" },
        { (TSqlTokenType.From, KeywordNamingPolicy.CamelCase), "from" },
        { (TSqlTokenType.From, KeywordNamingPolicy.PascalCase), "From" },
        { (TSqlTokenType.From, KeywordNamingPolicy.UpperCase), "FROM" },
        { (TSqlTokenType.Full, KeywordNamingPolicy.LowerCase), "full" },
        { (TSqlTokenType.Full, KeywordNamingPolicy.CamelCase), "full" },
        { (TSqlTokenType.Full, KeywordNamingPolicy.PascalCase), "Full" },
        { (TSqlTokenType.Full, KeywordNamingPolicy.UpperCase), "FULL" },
        { (TSqlTokenType.Function, KeywordNamingPolicy.LowerCase), "function" },
        { (TSqlTokenType.Function, KeywordNamingPolicy.CamelCase), "function" },
        { (TSqlTokenType.Function, KeywordNamingPolicy.PascalCase), "Function" },
        { (TSqlTokenType.Function, KeywordNamingPolicy.UpperCase), "FUNCTION" },
        { (TSqlTokenType.Go, KeywordNamingPolicy.LowerCase), "go" },
        { (TSqlTokenType.Go, KeywordNamingPolicy.CamelCase), "go" },
        { (TSqlTokenType.Go, KeywordNamingPolicy.PascalCase), "Go" },
        { (TSqlTokenType.Go, KeywordNamingPolicy.UpperCase), "GO" },
        { (TSqlTokenType.GoTo, KeywordNamingPolicy.LowerCase), "goto" },
        { (TSqlTokenType.GoTo, KeywordNamingPolicy.CamelCase), "goTo" },
        { (TSqlTokenType.GoTo, KeywordNamingPolicy.PascalCase), "GoTo" },
        { (TSqlTokenType.GoTo, KeywordNamingPolicy.UpperCase), "GOTO" },
        { (TSqlTokenType.Grant, KeywordNamingPolicy.LowerCase), "grant" },
        { (TSqlTokenType.Grant, KeywordNamingPolicy.CamelCase), "grant" },
        { (TSqlTokenType.Grant, KeywordNamingPolicy.PascalCase), "Grant" },
        { (TSqlTokenType.Grant, KeywordNamingPolicy.UpperCase), "GRANT" },
        { (TSqlTokenType.GreaterThan, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.GreaterThan, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.GreaterThan, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.GreaterThan, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Group, KeywordNamingPolicy.LowerCase), "group" },
        { (TSqlTokenType.Group, KeywordNamingPolicy.CamelCase), "group" },
        { (TSqlTokenType.Group, KeywordNamingPolicy.PascalCase), "Group" },
        { (TSqlTokenType.Group, KeywordNamingPolicy.UpperCase), "GROUP" },
        { (TSqlTokenType.Having, KeywordNamingPolicy.LowerCase), "having" },
        { (TSqlTokenType.Having, KeywordNamingPolicy.CamelCase), "having" },
        { (TSqlTokenType.Having, KeywordNamingPolicy.PascalCase), "Having" },
        { (TSqlTokenType.Having, KeywordNamingPolicy.UpperCase), "HAVING" },
        { (TSqlTokenType.HexLiteral, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.HexLiteral, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.HexLiteral, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.HexLiteral, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.HoldLock, KeywordNamingPolicy.LowerCase), "holdlock" },
        { (TSqlTokenType.HoldLock, KeywordNamingPolicy.CamelCase), "holdLock" },
        { (TSqlTokenType.HoldLock, KeywordNamingPolicy.PascalCase), "HoldLock" },
        { (TSqlTokenType.HoldLock, KeywordNamingPolicy.UpperCase), "HOLDLOCK" },
        { (TSqlTokenType.Identifier, KeywordNamingPolicy.LowerCase), "identifier" },
        { (TSqlTokenType.Identifier, KeywordNamingPolicy.CamelCase), "identifier" },
        { (TSqlTokenType.Identifier, KeywordNamingPolicy.PascalCase), "Identifier" },
        { (TSqlTokenType.Identifier, KeywordNamingPolicy.UpperCase), "IDENTIFIER" },
        { (TSqlTokenType.Identity, KeywordNamingPolicy.LowerCase), "identity" },
        { (TSqlTokenType.Identity, KeywordNamingPolicy.CamelCase), "identity" },
        { (TSqlTokenType.Identity, KeywordNamingPolicy.PascalCase), "Identity" },
        { (TSqlTokenType.Identity, KeywordNamingPolicy.UpperCase), "IDENTITY" },
        { (TSqlTokenType.IdentityColumn, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.IdentityColumn, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.IdentityColumn, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.IdentityColumn, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.IdentityInsert, KeywordNamingPolicy.LowerCase), "identityinsert" },
        { (TSqlTokenType.IdentityInsert, KeywordNamingPolicy.CamelCase), "identityInsert" },
        { (TSqlTokenType.IdentityInsert, KeywordNamingPolicy.PascalCase), "IdentityInsert" },
        { (TSqlTokenType.IdentityInsert, KeywordNamingPolicy.UpperCase), "IDENTITYINSERT" },
        { (TSqlTokenType.If, KeywordNamingPolicy.LowerCase), "if" },
        { (TSqlTokenType.If, KeywordNamingPolicy.CamelCase), "if" },
        { (TSqlTokenType.If, KeywordNamingPolicy.PascalCase), "If" },
        { (TSqlTokenType.If, KeywordNamingPolicy.UpperCase), "IF" },
        { (TSqlTokenType.In, KeywordNamingPolicy.LowerCase), "in" },
        { (TSqlTokenType.In, KeywordNamingPolicy.CamelCase), "in" },
        { (TSqlTokenType.In, KeywordNamingPolicy.PascalCase), "In" },
        { (TSqlTokenType.In, KeywordNamingPolicy.UpperCase), "IN" },
        { (TSqlTokenType.Index, KeywordNamingPolicy.LowerCase), "index" },
        { (TSqlTokenType.Index, KeywordNamingPolicy.CamelCase), "index" },
        { (TSqlTokenType.Index, KeywordNamingPolicy.PascalCase), "Index" },
        { (TSqlTokenType.Index, KeywordNamingPolicy.UpperCase), "INDEX" },
        { (TSqlTokenType.Inner, KeywordNamingPolicy.LowerCase), "inner" },
        { (TSqlTokenType.Inner, KeywordNamingPolicy.CamelCase), "inner" },
        { (TSqlTokenType.Inner, KeywordNamingPolicy.PascalCase), "Inner" },
        { (TSqlTokenType.Inner, KeywordNamingPolicy.UpperCase), "INNER" },
        { (TSqlTokenType.Insert, KeywordNamingPolicy.LowerCase), "insert" },
        { (TSqlTokenType.Insert, KeywordNamingPolicy.CamelCase), "insert" },
        { (TSqlTokenType.Insert, KeywordNamingPolicy.PascalCase), "Insert" },
        { (TSqlTokenType.Insert, KeywordNamingPolicy.UpperCase), "INSERT" },
        { (TSqlTokenType.Integer, KeywordNamingPolicy.LowerCase), "integer" },
        { (TSqlTokenType.Integer, KeywordNamingPolicy.CamelCase), "integer" },
        { (TSqlTokenType.Integer, KeywordNamingPolicy.PascalCase), "Integer" },
        { (TSqlTokenType.Integer, KeywordNamingPolicy.UpperCase), "INTEGER" },
        { (TSqlTokenType.Intersect, KeywordNamingPolicy.LowerCase), "intersect" },
        { (TSqlTokenType.Intersect, KeywordNamingPolicy.CamelCase), "intersect" },
        { (TSqlTokenType.Intersect, KeywordNamingPolicy.PascalCase), "Intersect" },
        { (TSqlTokenType.Intersect, KeywordNamingPolicy.UpperCase), "INTERSECT" },
        { (TSqlTokenType.Into, KeywordNamingPolicy.LowerCase), "into" },
        { (TSqlTokenType.Into, KeywordNamingPolicy.CamelCase), "into" },
        { (TSqlTokenType.Into, KeywordNamingPolicy.PascalCase), "Into" },
        { (TSqlTokenType.Into, KeywordNamingPolicy.UpperCase), "INTO" },
        { (TSqlTokenType.Is, KeywordNamingPolicy.LowerCase), "is" },
        { (TSqlTokenType.Is, KeywordNamingPolicy.CamelCase), "is" },
        { (TSqlTokenType.Is, KeywordNamingPolicy.PascalCase), "Is" },
        { (TSqlTokenType.Is, KeywordNamingPolicy.UpperCase), "IS" },
        { (TSqlTokenType.Join, KeywordNamingPolicy.LowerCase), "join" },
        { (TSqlTokenType.Join, KeywordNamingPolicy.CamelCase), "join" },
        { (TSqlTokenType.Join, KeywordNamingPolicy.PascalCase), "Join" },
        { (TSqlTokenType.Join, KeywordNamingPolicy.UpperCase), "JOIN" },
        { (TSqlTokenType.Key, KeywordNamingPolicy.LowerCase), "key" },
        { (TSqlTokenType.Key, KeywordNamingPolicy.CamelCase), "key" },
        { (TSqlTokenType.Key, KeywordNamingPolicy.PascalCase), "Key" },
        { (TSqlTokenType.Key, KeywordNamingPolicy.UpperCase), "KEY" },
        { (TSqlTokenType.Kill, KeywordNamingPolicy.LowerCase), "kill" },
        { (TSqlTokenType.Kill, KeywordNamingPolicy.CamelCase), "kill" },
        { (TSqlTokenType.Kill, KeywordNamingPolicy.PascalCase), "Kill" },
        { (TSqlTokenType.Kill, KeywordNamingPolicy.UpperCase), "KILL" },
        { (TSqlTokenType.Label, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Label, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Label, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Label, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Left, KeywordNamingPolicy.LowerCase), "left" },
        { (TSqlTokenType.Left, KeywordNamingPolicy.CamelCase), "left" },
        { (TSqlTokenType.Left, KeywordNamingPolicy.PascalCase), "Left" },
        { (TSqlTokenType.Left, KeywordNamingPolicy.UpperCase), "LEFT" },
        { (TSqlTokenType.LeftCurly, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.LeftCurly, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.LeftCurly, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.LeftCurly, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.LeftParenthesis, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.LeftParenthesis, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.LeftParenthesis, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.LeftParenthesis, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.LeftShift, KeywordNamingPolicy.LowerCase), "left_shift" },
        { (TSqlTokenType.LeftShift, KeywordNamingPolicy.CamelCase), "left_Shift" },
        { (TSqlTokenType.LeftShift, KeywordNamingPolicy.PascalCase), "Left_Shift" },
        { (TSqlTokenType.LeftShift, KeywordNamingPolicy.UpperCase), "LEFT_SHIFT" },
        { (TSqlTokenType.LessThan, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.LessThan, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.LessThan, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.LessThan, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Like, KeywordNamingPolicy.LowerCase), "like" },
        { (TSqlTokenType.Like, KeywordNamingPolicy.CamelCase), "like" },
        { (TSqlTokenType.Like, KeywordNamingPolicy.PascalCase), "Like" },
        { (TSqlTokenType.Like, KeywordNamingPolicy.UpperCase), "LIKE" },
        { (TSqlTokenType.LineNo, KeywordNamingPolicy.LowerCase), "lineno" },
        { (TSqlTokenType.LineNo, KeywordNamingPolicy.CamelCase), "lineNo" },
        { (TSqlTokenType.LineNo, KeywordNamingPolicy.PascalCase), "LineNo" },
        { (TSqlTokenType.LineNo, KeywordNamingPolicy.UpperCase), "LINENO" },
        { (TSqlTokenType.Load, KeywordNamingPolicy.LowerCase), "load" },
        { (TSqlTokenType.Load, KeywordNamingPolicy.CamelCase), "load" },
        { (TSqlTokenType.Load, KeywordNamingPolicy.PascalCase), "Load" },
        { (TSqlTokenType.Load, KeywordNamingPolicy.UpperCase), "LOAD" },
        { (TSqlTokenType.Merge, KeywordNamingPolicy.LowerCase), "merge" },
        { (TSqlTokenType.Merge, KeywordNamingPolicy.CamelCase), "merge" },
        { (TSqlTokenType.Merge, KeywordNamingPolicy.PascalCase), "Merge" },
        { (TSqlTokenType.Merge, KeywordNamingPolicy.UpperCase), "MERGE" },
        { (TSqlTokenType.Minus, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Minus, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Minus, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Minus, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.ModEquals, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.ModEquals, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.ModEquals, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.ModEquals, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Money, KeywordNamingPolicy.LowerCase), "money" },
        { (TSqlTokenType.Money, KeywordNamingPolicy.CamelCase), "money" },
        { (TSqlTokenType.Money, KeywordNamingPolicy.PascalCase), "Money" },
        { (TSqlTokenType.Money, KeywordNamingPolicy.UpperCase), "MONEY" },
        { (TSqlTokenType.MultilineComment, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.MultilineComment, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.MultilineComment, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.MultilineComment, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.MultiplyEquals, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.MultiplyEquals, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.MultiplyEquals, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.MultiplyEquals, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.National, KeywordNamingPolicy.LowerCase), "national" },
        { (TSqlTokenType.National, KeywordNamingPolicy.CamelCase), "national" },
        { (TSqlTokenType.National, KeywordNamingPolicy.PascalCase), "National" },
        { (TSqlTokenType.National, KeywordNamingPolicy.UpperCase), "NATIONAL" },
        { (TSqlTokenType.NoCheck, KeywordNamingPolicy.LowerCase), "nocheck" },
        { (TSqlTokenType.NoCheck, KeywordNamingPolicy.CamelCase), "noCheck" },
        { (TSqlTokenType.NoCheck, KeywordNamingPolicy.PascalCase), "NoCheck" },
        { (TSqlTokenType.NoCheck, KeywordNamingPolicy.UpperCase), "NOCHECK" },
        { (TSqlTokenType.NonClustered, KeywordNamingPolicy.LowerCase), "nonclustered" },
        { (TSqlTokenType.NonClustered, KeywordNamingPolicy.CamelCase), "nonClustered" },
        { (TSqlTokenType.NonClustered, KeywordNamingPolicy.PascalCase), "NonClustered" },
        { (TSqlTokenType.NonClustered, KeywordNamingPolicy.UpperCase), "NONCLUSTERED" },
        { (TSqlTokenType.None, KeywordNamingPolicy.LowerCase), "none" },
        { (TSqlTokenType.None, KeywordNamingPolicy.CamelCase), "none" },
        { (TSqlTokenType.None, KeywordNamingPolicy.PascalCase), "None" },
        { (TSqlTokenType.None, KeywordNamingPolicy.UpperCase), "NONE" },
        { (TSqlTokenType.Not, KeywordNamingPolicy.LowerCase), "not" },
        { (TSqlTokenType.Not, KeywordNamingPolicy.CamelCase), "not" },
        { (TSqlTokenType.Not, KeywordNamingPolicy.PascalCase), "Not" },
        { (TSqlTokenType.Not, KeywordNamingPolicy.UpperCase), "NOT" },
        { (TSqlTokenType.Null, KeywordNamingPolicy.LowerCase), "null" },
        { (TSqlTokenType.Null, KeywordNamingPolicy.CamelCase), "null" },
        { (TSqlTokenType.Null, KeywordNamingPolicy.PascalCase), "Null" },
        { (TSqlTokenType.Null, KeywordNamingPolicy.UpperCase), "NULL" },
        { (TSqlTokenType.NullIf, KeywordNamingPolicy.LowerCase), "nullif" },
        { (TSqlTokenType.NullIf, KeywordNamingPolicy.CamelCase), "nullIf" },
        { (TSqlTokenType.NullIf, KeywordNamingPolicy.PascalCase), "NullIf" },
        { (TSqlTokenType.NullIf, KeywordNamingPolicy.UpperCase), "NULLIF" },
        { (TSqlTokenType.Numeric, KeywordNamingPolicy.LowerCase), "numeric" },
        { (TSqlTokenType.Numeric, KeywordNamingPolicy.CamelCase), "numeric" },
        { (TSqlTokenType.Numeric, KeywordNamingPolicy.PascalCase), "Numeric" },
        { (TSqlTokenType.Numeric, KeywordNamingPolicy.UpperCase), "NUMERIC" },
        { (TSqlTokenType.OdbcInitiator, KeywordNamingPolicy.LowerCase), "odbcinitiator" },
        { (TSqlTokenType.OdbcInitiator, KeywordNamingPolicy.CamelCase), "odbcInitiator" },
        { (TSqlTokenType.OdbcInitiator, KeywordNamingPolicy.PascalCase), "OdbcInitiator" },
        { (TSqlTokenType.OdbcInitiator, KeywordNamingPolicy.UpperCase), "ODBCINITIATOR" },
        { (TSqlTokenType.Of, KeywordNamingPolicy.LowerCase), "of" },
        { (TSqlTokenType.Of, KeywordNamingPolicy.CamelCase), "of" },
        { (TSqlTokenType.Of, KeywordNamingPolicy.PascalCase), "Of" },
        { (TSqlTokenType.Of, KeywordNamingPolicy.UpperCase), "OF" },
        { (TSqlTokenType.Off, KeywordNamingPolicy.LowerCase), "off" },
        { (TSqlTokenType.Off, KeywordNamingPolicy.CamelCase), "off" },
        { (TSqlTokenType.Off, KeywordNamingPolicy.PascalCase), "Off" },
        { (TSqlTokenType.Off, KeywordNamingPolicy.UpperCase), "OFF" },
        { (TSqlTokenType.Offsets, KeywordNamingPolicy.LowerCase), "offsets" },
        { (TSqlTokenType.Offsets, KeywordNamingPolicy.CamelCase), "offsets" },
        { (TSqlTokenType.Offsets, KeywordNamingPolicy.PascalCase), "Offsets" },
        { (TSqlTokenType.Offsets, KeywordNamingPolicy.UpperCase), "OFFSETS" },
        { (TSqlTokenType.On, KeywordNamingPolicy.LowerCase), "on" },
        { (TSqlTokenType.On, KeywordNamingPolicy.CamelCase), "on" },
        { (TSqlTokenType.On, KeywordNamingPolicy.PascalCase), "On" },
        { (TSqlTokenType.On, KeywordNamingPolicy.UpperCase), "ON" },
        { (TSqlTokenType.Open, KeywordNamingPolicy.LowerCase), "open" },
        { (TSqlTokenType.Open, KeywordNamingPolicy.CamelCase), "open" },
        { (TSqlTokenType.Open, KeywordNamingPolicy.PascalCase), "Open" },
        { (TSqlTokenType.Open, KeywordNamingPolicy.UpperCase), "OPEN" },
        { (TSqlTokenType.OpenDataSource, KeywordNamingPolicy.LowerCase), "opendatasource" },
        { (TSqlTokenType.OpenDataSource, KeywordNamingPolicy.CamelCase), "openDataSource" },
        { (TSqlTokenType.OpenDataSource, KeywordNamingPolicy.PascalCase), "OpenDataSource" },
        { (TSqlTokenType.OpenDataSource, KeywordNamingPolicy.UpperCase), "OPENDATASOURCE" },
        { (TSqlTokenType.OpenQuery, KeywordNamingPolicy.LowerCase), "openquery" },
        { (TSqlTokenType.OpenQuery, KeywordNamingPolicy.CamelCase), "openQuery" },
        { (TSqlTokenType.OpenQuery, KeywordNamingPolicy.PascalCase), "OpenQuery" },
        { (TSqlTokenType.OpenQuery, KeywordNamingPolicy.UpperCase), "OPENQUERY" },
        { (TSqlTokenType.OpenRowSet, KeywordNamingPolicy.LowerCase), "openrowset" },
        { (TSqlTokenType.OpenRowSet, KeywordNamingPolicy.CamelCase), "openRowSet" },
        { (TSqlTokenType.OpenRowSet, KeywordNamingPolicy.PascalCase), "OpenRowSet" },
        { (TSqlTokenType.OpenRowSet, KeywordNamingPolicy.UpperCase), "OPENROWSET" },
        { (TSqlTokenType.OpenXml, KeywordNamingPolicy.LowerCase), "openxml" },
        { (TSqlTokenType.OpenXml, KeywordNamingPolicy.CamelCase), "openXml" },
        { (TSqlTokenType.OpenXml, KeywordNamingPolicy.PascalCase), "OpenXml" },
        { (TSqlTokenType.OpenXml, KeywordNamingPolicy.UpperCase), "OPENXML" },
        { (TSqlTokenType.Option, KeywordNamingPolicy.LowerCase), "option" },
        { (TSqlTokenType.Option, KeywordNamingPolicy.CamelCase), "option" },
        { (TSqlTokenType.Option, KeywordNamingPolicy.PascalCase), "Option" },
        { (TSqlTokenType.Option, KeywordNamingPolicy.UpperCase), "OPTION" },
        { (TSqlTokenType.Or, KeywordNamingPolicy.LowerCase), "or" },
        { (TSqlTokenType.Or, KeywordNamingPolicy.CamelCase), "or" },
        { (TSqlTokenType.Or, KeywordNamingPolicy.PascalCase), "Or" },
        { (TSqlTokenType.Or, KeywordNamingPolicy.UpperCase), "OR" },
        { (TSqlTokenType.Order, KeywordNamingPolicy.LowerCase), "order" },
        { (TSqlTokenType.Order, KeywordNamingPolicy.CamelCase), "order" },
        { (TSqlTokenType.Order, KeywordNamingPolicy.PascalCase), "Order" },
        { (TSqlTokenType.Order, KeywordNamingPolicy.UpperCase), "ORDER" },
        { (TSqlTokenType.Outer, KeywordNamingPolicy.LowerCase), "outer" },
        { (TSqlTokenType.Outer, KeywordNamingPolicy.CamelCase), "outer" },
        { (TSqlTokenType.Outer, KeywordNamingPolicy.PascalCase), "Outer" },
        { (TSqlTokenType.Outer, KeywordNamingPolicy.UpperCase), "OUTER" },
        { (TSqlTokenType.Over, KeywordNamingPolicy.LowerCase), "over" },
        { (TSqlTokenType.Over, KeywordNamingPolicy.CamelCase), "over" },
        { (TSqlTokenType.Over, KeywordNamingPolicy.PascalCase), "Over" },
        { (TSqlTokenType.Over, KeywordNamingPolicy.UpperCase), "OVER" },
        { (TSqlTokenType.Percent, KeywordNamingPolicy.LowerCase), "percent" },
        { (TSqlTokenType.Percent, KeywordNamingPolicy.CamelCase), "percent" },
        { (TSqlTokenType.Percent, KeywordNamingPolicy.PascalCase), "Percent" },
        { (TSqlTokenType.Percent, KeywordNamingPolicy.UpperCase), "PERCENT" },
        { (TSqlTokenType.PercentSign, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.PercentSign, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.PercentSign, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.PercentSign, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Pivot, KeywordNamingPolicy.LowerCase), "pivot" },
        { (TSqlTokenType.Pivot, KeywordNamingPolicy.CamelCase), "pivot" },
        { (TSqlTokenType.Pivot, KeywordNamingPolicy.PascalCase), "Pivot" },
        { (TSqlTokenType.Pivot, KeywordNamingPolicy.UpperCase), "PIVOT" },
        { (TSqlTokenType.Plan, KeywordNamingPolicy.LowerCase), "plan" },
        { (TSqlTokenType.Plan, KeywordNamingPolicy.CamelCase), "plan" },
        { (TSqlTokenType.Plan, KeywordNamingPolicy.PascalCase), "Plan" },
        { (TSqlTokenType.Plan, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Plus, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Plus, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Plus, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Plus, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Precision, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Precision, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Precision, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Precision, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Primary, KeywordNamingPolicy.LowerCase), "primary" },
        { (TSqlTokenType.Primary, KeywordNamingPolicy.CamelCase), "primary" },
        { (TSqlTokenType.Primary, KeywordNamingPolicy.PascalCase), "Primary" },
        { (TSqlTokenType.Primary, KeywordNamingPolicy.UpperCase), "PRIMARY" },
        { (TSqlTokenType.Print, KeywordNamingPolicy.LowerCase), "print" },
        { (TSqlTokenType.Print, KeywordNamingPolicy.CamelCase), "print" },
        { (TSqlTokenType.Print, KeywordNamingPolicy.PascalCase), "Print" },
        { (TSqlTokenType.Print, KeywordNamingPolicy.UpperCase), "PRINT" },
        { (TSqlTokenType.Proc, KeywordNamingPolicy.LowerCase), "proc" },
        { (TSqlTokenType.Proc, KeywordNamingPolicy.CamelCase), "proc" },
        { (TSqlTokenType.Proc, KeywordNamingPolicy.PascalCase), "Proc" },
        { (TSqlTokenType.Proc, KeywordNamingPolicy.UpperCase), "PROC" },
        { (TSqlTokenType.ProcNameSemicolon, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.ProcNameSemicolon, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.ProcNameSemicolon, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.ProcNameSemicolon, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Procedure, KeywordNamingPolicy.LowerCase), "procedure" },
        { (TSqlTokenType.Procedure, KeywordNamingPolicy.CamelCase), "procedure" },
        { (TSqlTokenType.Procedure, KeywordNamingPolicy.PascalCase), "Procedure" },
        { (TSqlTokenType.Procedure, KeywordNamingPolicy.UpperCase), "PROCEDURE" },
        { (TSqlTokenType.PseudoColumn, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.PseudoColumn, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.PseudoColumn, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.PseudoColumn, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Public, KeywordNamingPolicy.LowerCase), "public" },
        { (TSqlTokenType.Public, KeywordNamingPolicy.CamelCase), "public" },
        { (TSqlTokenType.Public, KeywordNamingPolicy.PascalCase), "Public" },
        { (TSqlTokenType.Public, KeywordNamingPolicy.UpperCase), "PUBLIC" },
        { (TSqlTokenType.QuotedIdentifier, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.QuotedIdentifier, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.QuotedIdentifier, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.QuotedIdentifier, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Raiserror, KeywordNamingPolicy.LowerCase), "raiserror" },
        { (TSqlTokenType.Raiserror, KeywordNamingPolicy.CamelCase), "raiserror" },
        { (TSqlTokenType.Raiserror, KeywordNamingPolicy.PascalCase), "Raiserror" },
        { (TSqlTokenType.Raiserror, KeywordNamingPolicy.UpperCase), "RAISERROR" },
        { (TSqlTokenType.Read, KeywordNamingPolicy.LowerCase), "read" },
        { (TSqlTokenType.Read, KeywordNamingPolicy.CamelCase), "read" },
        { (TSqlTokenType.Read, KeywordNamingPolicy.PascalCase), "Read" },
        { (TSqlTokenType.Read, KeywordNamingPolicy.UpperCase), "READ" },
        { (TSqlTokenType.ReadText, KeywordNamingPolicy.LowerCase), "readtext" },
        { (TSqlTokenType.ReadText, KeywordNamingPolicy.CamelCase), "readText" },
        { (TSqlTokenType.ReadText, KeywordNamingPolicy.PascalCase), "ReadText" },
        { (TSqlTokenType.ReadText, KeywordNamingPolicy.UpperCase), "READTEXT" },
        { (TSqlTokenType.Real, KeywordNamingPolicy.LowerCase), "real" },
        { (TSqlTokenType.Real, KeywordNamingPolicy.CamelCase), "real" },
        { (TSqlTokenType.Real, KeywordNamingPolicy.PascalCase), "Real" },
        { (TSqlTokenType.Real, KeywordNamingPolicy.UpperCase), "REAL" },
        { (TSqlTokenType.Reconfigure, KeywordNamingPolicy.LowerCase), "reconfigure" },
        { (TSqlTokenType.Reconfigure, KeywordNamingPolicy.CamelCase), "reconfigure" },
        { (TSqlTokenType.Reconfigure, KeywordNamingPolicy.PascalCase), "Reconfigure" },
        { (TSqlTokenType.Reconfigure, KeywordNamingPolicy.UpperCase), "RECONFIGURE" },
        { (TSqlTokenType.References, KeywordNamingPolicy.LowerCase), "references" },
        { (TSqlTokenType.References, KeywordNamingPolicy.CamelCase), "references" },
        { (TSqlTokenType.References, KeywordNamingPolicy.PascalCase), "References" },
        { (TSqlTokenType.References, KeywordNamingPolicy.UpperCase), "REFERENCES" },
        { (TSqlTokenType.Replication, KeywordNamingPolicy.LowerCase), "replication" },
        { (TSqlTokenType.Replication, KeywordNamingPolicy.CamelCase), "replication" },
        { (TSqlTokenType.Replication, KeywordNamingPolicy.PascalCase), "Replication" },
        { (TSqlTokenType.Replication, KeywordNamingPolicy.UpperCase), "REPLICATION" },
        { (TSqlTokenType.Restore, KeywordNamingPolicy.LowerCase), "restore" },
        { (TSqlTokenType.Restore, KeywordNamingPolicy.CamelCase), "restore" },
        { (TSqlTokenType.Restore, KeywordNamingPolicy.PascalCase), "Restore" },
        { (TSqlTokenType.Restore, KeywordNamingPolicy.UpperCase), "RESTORE" },
        { (TSqlTokenType.Restrict, KeywordNamingPolicy.LowerCase), "restrict" },
        { (TSqlTokenType.Restrict, KeywordNamingPolicy.CamelCase), "restrict" },
        { (TSqlTokenType.Restrict, KeywordNamingPolicy.PascalCase), "Restrict" },
        { (TSqlTokenType.Restrict, KeywordNamingPolicy.UpperCase), "RESTRICT" },
        { (TSqlTokenType.Return, KeywordNamingPolicy.LowerCase), "return" },
        { (TSqlTokenType.Return, KeywordNamingPolicy.CamelCase), "return" },
        { (TSqlTokenType.Return, KeywordNamingPolicy.PascalCase), "Return" },
        { (TSqlTokenType.Return, KeywordNamingPolicy.UpperCase), "RETURN" },
        { (TSqlTokenType.Revert, KeywordNamingPolicy.LowerCase), "revert" },
        { (TSqlTokenType.Revert, KeywordNamingPolicy.CamelCase), "revert" },
        { (TSqlTokenType.Revert, KeywordNamingPolicy.PascalCase), "Revert" },
        { (TSqlTokenType.Revert, KeywordNamingPolicy.UpperCase), "REVERT" },
        { (TSqlTokenType.Revoke, KeywordNamingPolicy.LowerCase), "revoke" },
        { (TSqlTokenType.Revoke, KeywordNamingPolicy.CamelCase), "revoke" },
        { (TSqlTokenType.Revoke, KeywordNamingPolicy.PascalCase), "Revoke" },
        { (TSqlTokenType.Revoke, KeywordNamingPolicy.UpperCase), "REVOKE" },
        { (TSqlTokenType.Right, KeywordNamingPolicy.LowerCase), "right" },
        { (TSqlTokenType.Right, KeywordNamingPolicy.CamelCase), "right" },
        { (TSqlTokenType.Right, KeywordNamingPolicy.PascalCase), "Right" },
        { (TSqlTokenType.Right, KeywordNamingPolicy.UpperCase), "RIGHT" },
        { (TSqlTokenType.RightCurly, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.RightCurly, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.RightCurly, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.RightCurly, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.RightOuterJoin, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.RightOuterJoin, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.RightOuterJoin, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.RightOuterJoin, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.RightParenthesis, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.RightParenthesis, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.RightParenthesis, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.RightParenthesis, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.RightShift, KeywordNamingPolicy.LowerCase), "right_shift" },
        { (TSqlTokenType.RightShift, KeywordNamingPolicy.CamelCase), "right_Shift" },
        { (TSqlTokenType.RightShift, KeywordNamingPolicy.PascalCase), "Right_Shift" },
        { (TSqlTokenType.RightShift, KeywordNamingPolicy.UpperCase), "RIGHT_SHIFT" },
        { (TSqlTokenType.Rollback, KeywordNamingPolicy.LowerCase), "rollback" },
        { (TSqlTokenType.Rollback, KeywordNamingPolicy.CamelCase), "rollback" },
        { (TSqlTokenType.Rollback, KeywordNamingPolicy.PascalCase), "Rollback" },
        { (TSqlTokenType.Rollback, KeywordNamingPolicy.UpperCase), "ROLLBACK" },
        { (TSqlTokenType.RowCount, KeywordNamingPolicy.LowerCase), "rowcount" },
        { (TSqlTokenType.RowCount, KeywordNamingPolicy.CamelCase), "rowCount" },
        { (TSqlTokenType.RowCount, KeywordNamingPolicy.PascalCase), "RowCount" },
        { (TSqlTokenType.RowCount, KeywordNamingPolicy.UpperCase), "ROWCOUNT" },
        { (TSqlTokenType.RowGuidColumn, KeywordNamingPolicy.LowerCase), "rowguidcol" },
        { (TSqlTokenType.RowGuidColumn, KeywordNamingPolicy.CamelCase), "rowGuidCol" },
        { (TSqlTokenType.RowGuidColumn, KeywordNamingPolicy.PascalCase), "RowGuidCol" },
        { (TSqlTokenType.RowGuidColumn, KeywordNamingPolicy.UpperCase), "ROWGUIDCOL" },
        { (TSqlTokenType.Rule, KeywordNamingPolicy.LowerCase), "rule" },
        { (TSqlTokenType.Rule, KeywordNamingPolicy.CamelCase), "rule" },
        { (TSqlTokenType.Rule, KeywordNamingPolicy.PascalCase), "Rule" },
        { (TSqlTokenType.Rule, KeywordNamingPolicy.UpperCase), "RULE" },
        { (TSqlTokenType.Save, KeywordNamingPolicy.LowerCase), "save" },
        { (TSqlTokenType.Save, KeywordNamingPolicy.CamelCase), "save" },
        { (TSqlTokenType.Save, KeywordNamingPolicy.PascalCase), "Save" },
        { (TSqlTokenType.Save, KeywordNamingPolicy.UpperCase), "SAVE" },
        { (TSqlTokenType.Schema, KeywordNamingPolicy.LowerCase), "schema" },
        { (TSqlTokenType.Schema, KeywordNamingPolicy.CamelCase), "schema" },
        { (TSqlTokenType.Schema, KeywordNamingPolicy.PascalCase), "Schema" },
        { (TSqlTokenType.Schema, KeywordNamingPolicy.UpperCase), "SCHEMA" },
        { (TSqlTokenType.Select, KeywordNamingPolicy.LowerCase), "select" },
        { (TSqlTokenType.Select, KeywordNamingPolicy.CamelCase), "select" },
        { (TSqlTokenType.Select, KeywordNamingPolicy.PascalCase), "Select" },
        { (TSqlTokenType.Select, KeywordNamingPolicy.UpperCase), "SELECT" },
        { (TSqlTokenType.SemanticKeyPhraseTable, KeywordNamingPolicy.LowerCase), "semantickeyphrasetable" },
        { (TSqlTokenType.SemanticKeyPhraseTable, KeywordNamingPolicy.CamelCase), "semanticKeyPhraseTable" },
        { (TSqlTokenType.SemanticKeyPhraseTable, KeywordNamingPolicy.PascalCase), "SemanticKeyPhraseTable" },
        { (TSqlTokenType.SemanticKeyPhraseTable, KeywordNamingPolicy.UpperCase), "SEMANTICKEYPHRASETABLE" },
        { (TSqlTokenType.SemanticSimilarityDetailsTable, KeywordNamingPolicy.LowerCase), "semanticsimilaritydetailstable" },
        { (TSqlTokenType.SemanticSimilarityDetailsTable, KeywordNamingPolicy.CamelCase), "semanticSimilarityDetailsTable" },
        { (TSqlTokenType.SemanticSimilarityDetailsTable, KeywordNamingPolicy.PascalCase), "SemanticSimilarityDetailsTable" },
        { (TSqlTokenType.SemanticSimilarityDetailsTable, KeywordNamingPolicy.UpperCase), "SEMANTICSIMILARITYDETAILSTABLE" },
        { (TSqlTokenType.SemanticSimilarityTable, KeywordNamingPolicy.LowerCase), "semanticsimilaritytable" },
        { (TSqlTokenType.SemanticSimilarityTable, KeywordNamingPolicy.CamelCase), "semanticSimilarityTable" },
        { (TSqlTokenType.SemanticSimilarityTable, KeywordNamingPolicy.PascalCase), "SemanticSimilarityTable" },
        { (TSqlTokenType.SemanticSimilarityTable, KeywordNamingPolicy.UpperCase), "SEMANTICSIMILARITYTABLE" },
        { (TSqlTokenType.Semicolon, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Semicolon, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Semicolon, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Semicolon, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.SessionUser, KeywordNamingPolicy.LowerCase), "sessionuser" },
        { (TSqlTokenType.SessionUser, KeywordNamingPolicy.CamelCase), "sessionUser" },
        { (TSqlTokenType.SessionUser, KeywordNamingPolicy.PascalCase), "SessionUser" },
        { (TSqlTokenType.SessionUser, KeywordNamingPolicy.UpperCase), "SESSIONUSER" },
        { (TSqlTokenType.Set, KeywordNamingPolicy.LowerCase), "set" },
        { (TSqlTokenType.Set, KeywordNamingPolicy.CamelCase), "set" },
        { (TSqlTokenType.Set, KeywordNamingPolicy.PascalCase), "Set" },
        { (TSqlTokenType.Set, KeywordNamingPolicy.UpperCase), "SET" },
        { (TSqlTokenType.SetUser, KeywordNamingPolicy.LowerCase), "setuser" },
        { (TSqlTokenType.SetUser, KeywordNamingPolicy.CamelCase), "setUser" },
        { (TSqlTokenType.SetUser, KeywordNamingPolicy.PascalCase), "SetUser" },
        { (TSqlTokenType.SetUser, KeywordNamingPolicy.UpperCase), "SETUSER" },
        { (TSqlTokenType.Shutdown, KeywordNamingPolicy.LowerCase), "shutdown" },
        { (TSqlTokenType.Shutdown, KeywordNamingPolicy.CamelCase), "shutdown" },
        { (TSqlTokenType.Shutdown, KeywordNamingPolicy.PascalCase), "Shutdown" },
        { (TSqlTokenType.Shutdown, KeywordNamingPolicy.UpperCase), "SHUTDOWN" },
        { (TSqlTokenType.SingleLineComment, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.SingleLineComment, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.SingleLineComment, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.SingleLineComment, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Some, KeywordNamingPolicy.LowerCase), "some" },
        { (TSqlTokenType.Some, KeywordNamingPolicy.CamelCase), "some" },
        { (TSqlTokenType.Some, KeywordNamingPolicy.PascalCase), "Some" },
        { (TSqlTokenType.Some, KeywordNamingPolicy.UpperCase), "SOME" },
        { (TSqlTokenType.SqlCommandIdentifier, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.SqlCommandIdentifier, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.SqlCommandIdentifier, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.SqlCommandIdentifier, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Star, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Star, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Star, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Star, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Statistics, KeywordNamingPolicy.LowerCase), "statistics" },
        { (TSqlTokenType.Statistics, KeywordNamingPolicy.CamelCase), "statistics" },
        { (TSqlTokenType.Statistics, KeywordNamingPolicy.PascalCase), "Statistics" },
        { (TSqlTokenType.Statistics, KeywordNamingPolicy.UpperCase), "STATISTICS" },
        { (TSqlTokenType.StopList, KeywordNamingPolicy.LowerCase), "stoplist" },
        { (TSqlTokenType.StopList, KeywordNamingPolicy.CamelCase), "stopList" },
        { (TSqlTokenType.StopList, KeywordNamingPolicy.PascalCase), "StopList" },
        { (TSqlTokenType.StopList, KeywordNamingPolicy.UpperCase), "STOPLIST" },
        { (TSqlTokenType.SubtractEquals, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.SubtractEquals, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.SubtractEquals, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.SubtractEquals, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.SystemUser, KeywordNamingPolicy.LowerCase), "systemuser" },
        { (TSqlTokenType.SystemUser, KeywordNamingPolicy.CamelCase), "systemUser" },
        { (TSqlTokenType.SystemUser, KeywordNamingPolicy.PascalCase), "SystemUser" },
        { (TSqlTokenType.SystemUser, KeywordNamingPolicy.UpperCase), "SYSTEMUSER" },
        { (TSqlTokenType.TSEqual, KeywordNamingPolicy.LowerCase), "tsequal" },
        { (TSqlTokenType.TSEqual, KeywordNamingPolicy.CamelCase), "tsEqual" },
        { (TSqlTokenType.TSEqual, KeywordNamingPolicy.PascalCase), "TsEqual" },
        { (TSqlTokenType.TSEqual, KeywordNamingPolicy.UpperCase), "TSEQUAL" },
        { (TSqlTokenType.Table, KeywordNamingPolicy.LowerCase), "table" },
        { (TSqlTokenType.Table, KeywordNamingPolicy.CamelCase), "table" },
        { (TSqlTokenType.Table, KeywordNamingPolicy.PascalCase), "Table" },
        { (TSqlTokenType.Table, KeywordNamingPolicy.UpperCase), "TABLE" },
        { (TSqlTokenType.TableSample, KeywordNamingPolicy.LowerCase), "tablesample" },
        { (TSqlTokenType.TableSample, KeywordNamingPolicy.CamelCase), "tableSample" },
        { (TSqlTokenType.TableSample, KeywordNamingPolicy.PascalCase), "TableSample" },
        { (TSqlTokenType.TableSample, KeywordNamingPolicy.UpperCase), "TABLESAMPLE" },
        { (TSqlTokenType.TextSize, KeywordNamingPolicy.LowerCase), "textsize" },
        { (TSqlTokenType.TextSize, KeywordNamingPolicy.CamelCase), "textSize" },
        { (TSqlTokenType.TextSize, KeywordNamingPolicy.PascalCase), "TextSize" },
        { (TSqlTokenType.TextSize, KeywordNamingPolicy.UpperCase), "TEXTSIZE" },
        { (TSqlTokenType.Then, KeywordNamingPolicy.LowerCase), "then" },
        { (TSqlTokenType.Then, KeywordNamingPolicy.CamelCase), "then" },
        { (TSqlTokenType.Then, KeywordNamingPolicy.PascalCase), "Then" },
        { (TSqlTokenType.Then, KeywordNamingPolicy.UpperCase), "THEN" },
        { (TSqlTokenType.Tilde, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Tilde, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Tilde, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Tilde, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.To, KeywordNamingPolicy.LowerCase), "to" },
        { (TSqlTokenType.To, KeywordNamingPolicy.CamelCase), "to" },
        { (TSqlTokenType.To, KeywordNamingPolicy.PascalCase), "To" },
        { (TSqlTokenType.To, KeywordNamingPolicy.UpperCase), "TO" },
        { (TSqlTokenType.Top, KeywordNamingPolicy.LowerCase), "top" },
        { (TSqlTokenType.Top, KeywordNamingPolicy.CamelCase), "top" },
        { (TSqlTokenType.Top, KeywordNamingPolicy.PascalCase), "Top" },
        { (TSqlTokenType.Top, KeywordNamingPolicy.UpperCase), "TOP" },
        { (TSqlTokenType.Tran, KeywordNamingPolicy.LowerCase), "tran" },
        { (TSqlTokenType.Tran, KeywordNamingPolicy.CamelCase), "tran" },
        { (TSqlTokenType.Tran, KeywordNamingPolicy.PascalCase), "Tran" },
        { (TSqlTokenType.Tran, KeywordNamingPolicy.UpperCase), "TRAN" },
        { (TSqlTokenType.Transaction, KeywordNamingPolicy.LowerCase), "transaction" },
        { (TSqlTokenType.Transaction, KeywordNamingPolicy.CamelCase), "transaction" },
        { (TSqlTokenType.Transaction, KeywordNamingPolicy.PascalCase), "Transaction" },
        { (TSqlTokenType.Transaction, KeywordNamingPolicy.UpperCase), "TRANSACTION" },
        { (TSqlTokenType.Trigger, KeywordNamingPolicy.LowerCase), "trigger" },
        { (TSqlTokenType.Trigger, KeywordNamingPolicy.CamelCase), "trigger" },
        { (TSqlTokenType.Trigger, KeywordNamingPolicy.PascalCase), "Trigger" },
        { (TSqlTokenType.Trigger, KeywordNamingPolicy.UpperCase), "TRIGGER" },
        { (TSqlTokenType.Truncate, KeywordNamingPolicy.LowerCase), "truncate" },
        { (TSqlTokenType.Truncate, KeywordNamingPolicy.CamelCase), "truncate" },
        { (TSqlTokenType.Truncate, KeywordNamingPolicy.PascalCase), "Truncate" },
        { (TSqlTokenType.Truncate, KeywordNamingPolicy.UpperCase), "TRUNCATE" },
        { (TSqlTokenType.TryConvert, KeywordNamingPolicy.LowerCase), "tryconvert" },
        { (TSqlTokenType.TryConvert, KeywordNamingPolicy.CamelCase), "tryConvert" },
        { (TSqlTokenType.TryConvert, KeywordNamingPolicy.PascalCase), "TryConvert" },
        { (TSqlTokenType.TryConvert, KeywordNamingPolicy.UpperCase), "TRYCONVERT" },
        { (TSqlTokenType.UnicodeStringLiteral, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.UnicodeStringLiteral, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.UnicodeStringLiteral, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.UnicodeStringLiteral, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Union, KeywordNamingPolicy.LowerCase), "union" },
        { (TSqlTokenType.Union, KeywordNamingPolicy.CamelCase), "union" },
        { (TSqlTokenType.Union, KeywordNamingPolicy.PascalCase), "Union" },
        { (TSqlTokenType.Union, KeywordNamingPolicy.UpperCase), "UNION" },
        { (TSqlTokenType.Unique, KeywordNamingPolicy.LowerCase), "unique" },
        { (TSqlTokenType.Unique, KeywordNamingPolicy.CamelCase), "unique" },
        { (TSqlTokenType.Unique, KeywordNamingPolicy.PascalCase), "Unique" },
        { (TSqlTokenType.Unique, KeywordNamingPolicy.UpperCase), "UNIQUE" },
        { (TSqlTokenType.Unpivot, KeywordNamingPolicy.LowerCase), "unpivot" },
        { (TSqlTokenType.Unpivot, KeywordNamingPolicy.CamelCase), "unpivot" },
        { (TSqlTokenType.Unpivot, KeywordNamingPolicy.PascalCase), "Unpivot" },
        { (TSqlTokenType.Unpivot, KeywordNamingPolicy.UpperCase), "UNPIVOT" },
        { (TSqlTokenType.Update, KeywordNamingPolicy.LowerCase), "update" },
        { (TSqlTokenType.Update, KeywordNamingPolicy.CamelCase), "update" },
        { (TSqlTokenType.Update, KeywordNamingPolicy.PascalCase), "Update" },
        { (TSqlTokenType.Update, KeywordNamingPolicy.UpperCase), "UPDATE" },
        { (TSqlTokenType.UpdateText, KeywordNamingPolicy.LowerCase), "updatetext" },
        { (TSqlTokenType.UpdateText, KeywordNamingPolicy.CamelCase), "updateText" },
        { (TSqlTokenType.UpdateText, KeywordNamingPolicy.PascalCase), "UpdateText" },
        { (TSqlTokenType.UpdateText, KeywordNamingPolicy.UpperCase), "UPDATETEXT" },
        { (TSqlTokenType.Use, KeywordNamingPolicy.LowerCase), "use" },
        { (TSqlTokenType.Use, KeywordNamingPolicy.CamelCase), "use" },
        { (TSqlTokenType.Use, KeywordNamingPolicy.PascalCase), "Use" },
        { (TSqlTokenType.Use, KeywordNamingPolicy.UpperCase), "USE" },
        { (TSqlTokenType.User, KeywordNamingPolicy.LowerCase), "user" },
        { (TSqlTokenType.User, KeywordNamingPolicy.CamelCase), "user" },
        { (TSqlTokenType.User, KeywordNamingPolicy.PascalCase), "User" },
        { (TSqlTokenType.User, KeywordNamingPolicy.UpperCase), "USER" },
        { (TSqlTokenType.Values, KeywordNamingPolicy.LowerCase), "values" },
        { (TSqlTokenType.Values, KeywordNamingPolicy.CamelCase), "values" },
        { (TSqlTokenType.Values, KeywordNamingPolicy.PascalCase), "Values" },
        { (TSqlTokenType.Values, KeywordNamingPolicy.UpperCase), "VALUES" },
        { (TSqlTokenType.Variable, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.Variable, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.Variable, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.Variable, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.Varying, KeywordNamingPolicy.LowerCase), "varying" },
        { (TSqlTokenType.Varying, KeywordNamingPolicy.CamelCase), "varying" },
        { (TSqlTokenType.Varying, KeywordNamingPolicy.PascalCase), "Varying" },
        { (TSqlTokenType.Varying, KeywordNamingPolicy.UpperCase), "VARYING" },
        { (TSqlTokenType.VerticalLine, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.VerticalLine, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.VerticalLine, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.VerticalLine, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.View, KeywordNamingPolicy.LowerCase), "view" },
        { (TSqlTokenType.View, KeywordNamingPolicy.CamelCase), "view" },
        { (TSqlTokenType.View, KeywordNamingPolicy.PascalCase), "View" },
        { (TSqlTokenType.View, KeywordNamingPolicy.UpperCase), "VIEW" },
        { (TSqlTokenType.WaitFor, KeywordNamingPolicy.LowerCase), "waitfor" },
        { (TSqlTokenType.WaitFor, KeywordNamingPolicy.CamelCase), "waitFor" },
        { (TSqlTokenType.WaitFor, KeywordNamingPolicy.PascalCase), "WaitFor" },
        { (TSqlTokenType.WaitFor, KeywordNamingPolicy.UpperCase), "WAITFOR" },
        { (TSqlTokenType.When, KeywordNamingPolicy.LowerCase), "when" },
        { (TSqlTokenType.When, KeywordNamingPolicy.CamelCase), "when" },
        { (TSqlTokenType.When, KeywordNamingPolicy.PascalCase), "When" },
        { (TSqlTokenType.When, KeywordNamingPolicy.UpperCase), "WHEN" },
        { (TSqlTokenType.Where, KeywordNamingPolicy.LowerCase), "where" },
        { (TSqlTokenType.Where, KeywordNamingPolicy.CamelCase), "where" },
        { (TSqlTokenType.Where, KeywordNamingPolicy.PascalCase), "Where" },
        { (TSqlTokenType.Where, KeywordNamingPolicy.UpperCase), "WHERE" },
        { (TSqlTokenType.While, KeywordNamingPolicy.LowerCase), "while" },
        { (TSqlTokenType.While, KeywordNamingPolicy.CamelCase), "while" },
        { (TSqlTokenType.While, KeywordNamingPolicy.PascalCase), "While" },
        { (TSqlTokenType.While, KeywordNamingPolicy.UpperCase), "WHILE" },
        { (TSqlTokenType.WhiteSpace, KeywordNamingPolicy.LowerCase), null },
        { (TSqlTokenType.WhiteSpace, KeywordNamingPolicy.CamelCase), null },
        { (TSqlTokenType.WhiteSpace, KeywordNamingPolicy.PascalCase), null },
        { (TSqlTokenType.WhiteSpace, KeywordNamingPolicy.UpperCase), null },
        { (TSqlTokenType.With, KeywordNamingPolicy.LowerCase), "with" },
        { (TSqlTokenType.With, KeywordNamingPolicy.CamelCase), "with" },
        { (TSqlTokenType.With, KeywordNamingPolicy.PascalCase), "With" },
        { (TSqlTokenType.With, KeywordNamingPolicy.UpperCase), "WITH" },
        { (TSqlTokenType.WriteText, KeywordNamingPolicy.LowerCase), "writetext" },
        { (TSqlTokenType.WriteText, KeywordNamingPolicy.CamelCase), "writeText" },
        { (TSqlTokenType.WriteText, KeywordNamingPolicy.PascalCase), "WriteText" },
        { (TSqlTokenType.WriteText, KeywordNamingPolicy.UpperCase), "WRITETEXT" }
    };

    public static string? GetTokenCasing(TSqlTokenType tokenType, KeywordNamingPolicy keywordNamingPolicy) => KeywordCasingsByTokenType.GetValueOrDefault((tokenType, keywordNamingPolicy));
}
