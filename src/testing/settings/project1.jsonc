{
    "DefaultSchemaName": "dbo",
    "ScriptSource": {
        "ExclusionFilters": [],
        "ScriptsRootDirectoryPath": "..\\..\\testing\\scripts\\",
        "DatabaseScriptsRootPathByDatabaseName": {
            "database-1": "..\\..\\..\\..\\testing\\scripts\\database-1",
            "database-2": "..\\..\\..\\..\\testing\\scripts\\database-2",
            "database-3": "..\\..\\..\\..\\testing\\scripts\\database-3"
            //"database-4": "..\\..\\..\\..\\testing\\scripts\\database-4"
            //"database-5": "..\\..\\..\\..\\testing\\scripts\\database-5"
        }
    },
    "Diagnostics": {
        "DisabledDiagnostics": [
        ],
        "AJ5001": // Excessive string concatenation
        {
            "MaxAllowedConcatenations": 2
        },
        "AJ5003": // Wrong USE DATABASE name statement
        {
            "ExcludedFilePathPatterns": [
                "0000 Create*.sql"
            ]
        },
        "AJ5004": // open points / todo
        {
            "TopicsAndPatterns": [
                {
                    "Topic": "to do",
                    "Pattern": "TODO[\\s:]*(?<message>[^\r\n]+)"
                }
            ]
        },
        "AJ5006": // Banned data types
        {
            "BannedColumnDataTypes": [
                "decimal",
                // use numeric because decimal is a synonym for numeric
                "varchar*"
                // use nvarchar instead
            ],
            "BannedFunctionParameterDataTypes": [
                "decimal",
                // use numeric because decimal is a synonym for numeric
                "varchar*"
                // use nvarchar instead
            ],
            "BannedProcedureParameterDataTypes": [
                "decimal",
                // use numeric because decimal is a synonym for numeric
                "varchar*"
                // use nvarchar instead
            ],
            "BannedScriptVariableDataTypes": [
                "decimal",
                // use numeric because decimal is a synonym for numeric
                "varchar*"
                // use nvarchar instead
            ]
        },
        "AJ5015": // Missing index on column being filtered
        {
            "MissingIndexSuppressions": [
                {
                    "FullColumnNamePattern": "MyDb.MySchema.MyTable.MyColumn",
                    "SuppressionReason": "<Your reason here>"
                },
                {
                    "FullColumnNamePattern": "MyDb2.MySchema2.MyTable2.MyColumn2",
                    "SuppressionReason": "<Your reason here>"
                }
            ]
        },
        "AJ5017": // Missing index on foreign key column
        {
            "MissingIndexOnForeignKeyColumnSuppressions": [
                {
                    "FullColumnNamePattern": "MyDb.MySchema.MyTable.ForeignKeyId",
                    "SuppressionReason": "<Your reason here>"
                },
                {
                    "FullColumnNamePattern": "MyDb2.MySchema2.MyTable2.ForeignKeyId2",
                    "SuppressionReason": "<Your reason here>"
                }
            ]
        },
        "AJ5022": // Missing BEGIN/END blocks
        {
            "IfRequiresBeginEndBlock": false,
            "WhileRequiresBeginEndBlock": true
        },
        "AJ5023": // Statements must begin on a new line
        {
            "StatementTypesToIgnore": [
                "GOTO",
                "PRINT",
                "SET",
                "EXEC"
            ]
        },
        "AJ5025": // Existence checks for creation statements
        {
            "ExistenceCheckPatternForTableCreation": "IF NOT EXISTS (SELECT 1 FROM sys.tables WHERE object_id = OBJECT_ID(N'[{TableSchemaName}].[{TableName}]'))"
        },
        "AJ5026": // Missing primary key
        {
            "FullTableNamesToIgnore": [
                "?_RAW*.*",
                "master.*"
            ]
        },
        "AJ5027": // Table has no clustered index
        {
            "FullTableNamesToIgnore": [
                "?_RAW*.*",
                "master.*"
            ]
        },
        "AJ5030": // Object and variable naming
        {
            "ColumnName": {
                "Pattern": "\\A[A-Z][A-Za-z0-1]+",
                "Description": "Column names must start with a capital letter followed by characters or numbers only"
            },
            "FunctionName": {
                "Pattern": "\\A[A-Z][A-Za-z0-1]+",
                "Description": "Function names must start with a capital letter followed by characters or numbers only."
            },
            "ParameterName": {
                "Pattern": "\\A[A-Z][A-Za-z0-1]+",
                "Description": "Parameter names must start with a capital letter followed by characters or numbers only."
            },
            "ProcedureName": {
                "Pattern": "\\A[A-Z][A-Za-z0-1]+",
                "Description": "Procedure names must start with a capital letter followed by characters or numbers only"
            },
            "TableName": {
                "Pattern": "\\A[A-Z][A-Za-z0-1]+",
                "Description": "Table names must start with a capital letter followed by characters or numbers only"
            },
            "TempTableName": {
                "Pattern": "\\A##?[A-Z][A-Za-z0-1]+",
                "Description": "Temp table names must start with one or two #, followed by a capital letter followed by characters or numbers only"
            },
            "TriggerName": {
                "Pattern": "\\ATRG_[A-Za-z0-1]+",
                "Description": "Trigger names must start with a capital letter followed by characters or numbers only"
            },
            "VariableName": {
                "Pattern": "\\A[A-Z][A-Za-z0-1]+",
                "Description": "Variable names must start with a capital letter followed by characters or numbers only"
            },
            "ViewName": {
                "Pattern": "\\AV_[A-Z][A-Za-z0-1]+",
                "Description": "View names must start with a capital letter followed by characters or numbers only"
            },
            "TableAliasName": {
                "Pattern": "\\A[a-z0-9_]+",
                "Description": "View names must start with a lower case letter and followed by underscores, lower case letters or numbers only"
            },
            "IgnoredObjectNamePatterns": [
                "MyDb.MySchema.*"
            ]
        },
        "AJ5038": // Name quoting. Possible values: Undefined, Required, DoubleQuotesRequired, SquareBracketsRequired or NotAllowed
        {
            "NameQuotingPolicyDuringObjectCreation": "NotAllowed",
            "NameQuotingPolicyForColumnReferences": "Undefined",
            "NameQuotingPolicyForColumnDefinitions": "SquareBracketsRequired",
            "NameQuotingPolicyForTableReferences": "SquareBracketsRequired",
            "NameQuotingPolicyForDataTypes": "Undefined"
        },
        "AJ5040": // Banned functions
        {
            "BanReasonByFunctionName": {
                "GETDATE": "Use 'GETUTCDATE()' instead"
            }
        },
        "AJ5044": // Missing object
        {
            "IgnoredObjectNamePatterns": [
                "*.sys.*",
                "*.sysdatabases",
                "*.sysdatabases.*",
                "*#*",
                "*.datacycle.*",
                "*.INFORMATION_SCHEMA.*",
                "*.sp_ExecuteSql"
            ]
        },
        "AJ5045": // Empty lines before/after GO statement
        {
            "RequireEmptyLineBeforeGo": false,
            "RequireEmptyLineAfterGo": true
        },
        "AJ5048": // Long/Short Keyword notation enforcement
        {
            // The keyword notation type for `Execute | Exec`. Supported are: `None`, `Long` or `Short`. Default is `Short`.
            "Execute": "Short",
            // The keyword notation type for `Procedure | Proc`. Supported are: `None`, `Long` or `Short`. Default is `Long`.
            "Procedure": "Long",
            // The keyword notation type for `Transaction | Tran`. Supported are: `None`, `Long` or `Short`. Default is `Long`.
            "Transaction": "Long"
        },
        "AJ5049": // Object invocation without specified schema name
        {
            "IgnoredObjectNamePatterns": [
                "sp_MSforeachdb",
                "sp_executesql",
                "SP_CONFIGURE",
                "sp_addsrvrolemember",
                "xp_fileexist"
            ]
        },
        "AJ5051": // Unused index
        {
            "IgnoreUnusedPrimaryKeyIndices": false
        },
        "AJ5052": // Index naming enforcement
        {
            "NamingPatterns": [
                {
                    "IndexProperties": "PrimaryKey",
                    "Pattern": "PK_{TableSchemaName}_{TableName}"
                },
                {
                    "IndexProperties": "Unique, Clustered",
                    "Pattern": "UXC_{TableSchemaName}_{TableName}_{ColumnNames}"
                },
                {
                    "IndexProperties": "Unique",
                    "Pattern": "UXC_{TableSchemaName}_{TableName}_{ColumnNames}"
                },
                {
                    "IndexProperties": "Clustered",
                    "Pattern": "IXC_{TableSchemaName}_{TableName}_{ColumnNames}"
                }
            ],
            "DefaultPattern": "IX_{TableSchemaName}_{TableName}_{ColumnNames}"
        },
        "AJ5054": {
            "DatabasesToExclude": [],
            "ColumnNamesToExclude": [
                "Id"
            ]
        },
        "AJ5055": {
            "ExcludedDatabaseNames": [
                "master",
                "?_RAW*"
            ]
        },
        "AJ5056": // Keyword casing
        {
            // Possible values: 'Disabled', 'UpperCase', 'LowerCase', 'CamelCase' or 'PascalCase'. Default is 'UpperCase'
            "KeywordNamingPolicy": "UpperCase"
        },
        "AJ5057": // Keyword casing
        {
            "CasingByIdentifier": {
                "Owner": "OWNER",
                "Output": "OUTPUT",
                "NVarChar": "NVARCHAR",
                "varChar": "VARCHAR",
                "dbo": "dbo",
                "Name": "NAME"
            }
        },
        "AJ5058": // Drop statements
        {
            "AllowedInFilesByDropStatementType": {
                "DropTable": [
                    "*__drop__*.sql"
                ],
                "DropProcedure": [
                    "*__drop__*.sql"
                ],
                "AlterTableDropTableElement": [
                    "*__drop__*.sql"
                ]
            }
        },
        "AJ5059": // Procedure invocation without explicit parameter name
        {
            "IgnoredProcedureNamePatterns": [
                "*.sp_MSforeachDb",
                "*.sp_ExecuteSql"
            ]
        },
        "AJ5060": // Usage of reserved words or keywords for table, view, function and procedure names.
        {
            // An array of one or more words separated by a semicolon (;)
            "ReservedIdentifierNames": [
                "ABSOLUTE;ACTION;ADA;ADD;ALL;ALLOCATE;ALTER;AND;ANY;ARE;AS;ASC;ASSERTION;AT;AUTHORIZATION;AVG",
                "BACKUP;BEGIN;BETWEEN;BIT;BIT_LENGTH;BOTH;BREAK;BROWSE;BULK;BY",
                "CASCADE;CASCADED;CASE;CAST;CATALOG;CHAR;CHAR_LENGTH;CHARACTER;CHARACTER_LENGTH;CHECK;CHECKPOINT;CLOSE;CLUSTERED;COALESCE;COLLATE;COLLATION;COLUMN;COMMIT;COMPUTE;CONNECT;CONNECTION;CONSTRAINT;CONSTRAINTS;CONTAINS;CONTAINSTABLE;CONTINUE;CONVERT;CORRESPONDING;COUNT;CREATE;CROSS;CURRENT;CURRENT_DATE;CURRENT_TIME;CURRENT_TIMESTAMP;CURRENT_USER;CURSOR",
                "DATABASE;DATE;DAY;DBCC;DEALLOCATE;DEC;DECIMAL;DECLARE;DEFAULT;DEFERRABLE;DEFERRED;DELETE;DENY;DESC;DESCRIBE;DESCRIPTOR;DIAGNOSTICS;DISCONNECT;DISK;DISTINCT;DISTRIBUTED;DOMAIN;DOUBLE;DROP;DUMP",
                "ELSE;END;END-EXEC;ERRLVL;ESCAPE;EXCEPT;EXCEPTION;EXEC;EXECUTE;EXISTS;EXIT;EXTERNAL;EXTRACT",
                "FALSE;FETCH;FILE;FILLFACTOR;FIRST;FLOAT;FOR;FOREIGN;FORTRAN;FOUND;FREETEXT;FREETEXTTABLE;FROM;FULL;FUNCTION",
                "GET;GLOBAL;GO;GOTO;GRANT;GROUP",
                "HAVING;HOLDLOCK;HOUR",
                "IDENTITY;IDENTITY_INSERT;IDENTITYCOL;IF;IMMEDIATE;IN;INCLUDE;INDEX;INDICATOR;INITIALLY;INNER;INPUT;INSENSITIVE;INSERT;INT;INTEGER;INTERSECT;INTERVAL;INTO;IS;ISOLATION",
                "JOIN",
                "KEY;KILL",
                "LANGUAGE;LAST;LEADING;LEFT;LEVEL;LIKE;LINENO;LOAD;LOCAL;LOWER",
                "MATCH;MERGE;MINUTE;MODULE;MONTH",
                "NAMES;NATIONAL;NATURAL;NCHAR;NEXT;NO;NOCHECK;NONCLUSTERED;NOT;NULL;NULLIF;NUMERIC",
                "OCTET_LENGTH;OF;OFF;OFFSETS;ON;ONLY",
                "OPEN;OPENDATASOURCE;OPENQUERY;OPENROWSET;OPENXML;OPTION;OR;ORDER;OUTER;OUTPUT;OVER;OVERLAPS",
                "PAD;PARTIAL;PASCAL;PERCENT;PIVOT;PLAN;POSITION;PRECISION;PREPARE;PRESERVE;PRIMARY;PRINT;PRIOR;PRIVILEGES;PROC;PROCEDURE;PUBLIC;RAISERROR",
                "READ;READTEXT;REAL;RECONFIGURE;REFERENCES;RELATIVE;REPLICATION;RESTORE;RESTRICT;RETURN;REVERT;REVOKE;RIGHT;ROLLBACK;ROWCOUNT;ROWGUIDCOL;ROWS;RULE",
                "SAVE;SCHEMA;SCROLL;SECOND;SECTION;SECURITYAUDIT;SELECT;SEMANTICKEYPHRASETABLE;SEMANTICSIMILARITYDETAILSTABLE;SEMANTICSIMILARITYTABLE;SESSION_USER;SET;SETUSER;SHUTDOWN;SIZE;SMALLINT;SOME;SPACE;SQLCA;SQLCODE;SQLERROR;SQLSTATE;SQLWARNING;STATISTICS;SUBSTRING;SUM;SYSTEM_USER",
                "TABLE;TABLESAMPLE;TEMPORARY;TEXTSIZE;THEN;TIME;TIMESTAMP;TIMEZONE_HOUR;TIMEZONE_MINUTE;TO;TOP;TRAILING;TRANSACTION;TRANSLATE;TRANSLATION;TRIGGER;TRIM;TRUE;TRUNCATE;TRY_CONVERT;TSEQUAL",
                "UNION;UNIQUE;UNKNOWN;UNPIVOT;UPDATE;UPDATETEXT;UPPER;USAGE;USE;USER;USING",
                "VALUE;VALUES;VARCHAR;VARYING;VIEW",
                "WAITFOR;WHEN;WHENEVER;WHERE;WHILE;WITH;WITHIN;WORK;WRITE;WRITETEXT",
                "YEAR"
            ]
        },
        "AJ5062": // Procedure invocation without explicit value for all parameters
        {
            "ValueRequiredForNullableParameters": true,
            "ValueRequiredForParametersWithDefaultValue": true
        }
    },
    "Services": {
        "AstService": {
            "EnumerationValueParameterIndicesByFunctionName": {
                "DATEPART": [
                    0
                ],
                "DATEADD": [
                    0
                ],
                "DATENAME": [
                    0
                ],
                "DATEDIFF": [
                    0
                ]
            }
        }
    }
}

